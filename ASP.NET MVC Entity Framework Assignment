using System;
using System.Linq;
using System.Web.Mvc;
using CarInsurance.Models;

namespace CarInsurance.Controllers
{
    public class InsureeController : Controller
    {
        private InsuranceEntities db = new InsuranceEntities();

        // POST: Insuree/Create
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create([Bind(Include = "FirstName,LastName,EmailAddress,DateOfBirth,CarYear,CarMake,CarModel,SpeedingTickets,HasDui,CoverageType")] Insuree insuree)
        {
            if (ModelState.IsValid)
            {
                insuree.Quote = CalculateQuote(insuree);
                db.Insurees.Add(insuree);
                db.SaveChanges();
                return RedirectToAction("Index");
            }

            return View(insuree);
        }

        private decimal CalculateQuote(Insuree insuree)
        {
            decimal quote = 50m; // Base price
            int age = DateTime.Now.Year - insuree.DateOfBirth.Year;

            // Age-based pricing
            if (age <= 18) quote += 100m;
            else if (age >= 19 && age <= 25) quote += 50m;
            else quote += 25m;

            // Car year-based pricing
            if (insuree.CarYear < 2000) quote += 25m;
            else if (insuree.CarYear > 2015) quote += 25m;

            // Car make & model-based pricing
            if (insuree.CarMake.ToLower() == "porsche")
            {
                quote += 25m;
                if (insuree.CarModel.ToLower() == "911 carrera") quote += 25m;
            }

            // Speeding tickets
            quote += insuree.SpeedingTickets * 10m;

            // DUI surcharge
            if (insuree.HasDui) quote *= 1.25m;

            // Full coverage surcharge
            if (insuree.CoverageType) quote *= 1.5m;

            return quote;
        }

        public ActionResult Admin()
        {
            var insurees = db.Insurees.ToList();
            return View(insurees);
        }
    }
}
